
package actividad6.tss.codigo.GUI;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.math3.distribution.NormalDistribution;
import org.apache.commons.math3.distribution.TDistribution;

public class VentanaEjercicio1 extends javax.swing.JPanel {

    public VentanaEjercicio1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        PanelEjercicio1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        textMediaPieza = new javax.swing.JTextField();
        textMediaInspeccion = new javax.swing.JTextField();
        btnEjemplo = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaFinal = new javax.swing.JTable();
        btnLimpiar = new javax.swing.JButton();
        btnCrearTabla = new javax.swing.JButton();
        btnGenerador = new javax.swing.JButton();
        textDesvInspeccion = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaEstadisticos = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        textCantPiezas = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(890, 560));

        PanelEjercicio1.setBackground(new java.awt.Color(102, 102, 102));
        PanelEjercicio1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        PanelEjercicio1.setPreferredSize(new java.awt.Dimension(2100, 1650));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("EJERCICIO 1 - FABRICA");

        jLabel10.setText("-------------------------------------------------");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("DATOS");

        jLabel8.setText("Tiempo entre llegadas de pieza:");

        jLabel9.setText("Tiempo de inspeccion:");

        textMediaPieza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textMediaPiezaActionPerformed(evt);
            }
        });

        btnEjemplo.setText("Ejercicio de Ejemplo");
        btnEjemplo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjemploActionPerformed(evt);
            }
        });

        jLabel7.setText("TABLA SIMULACION 1");

        tablaFinal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Piezas", "Rn", "T. entre llegadas", "Min. llegada de pieza", "Min. ini. inspeccion", "Rn", "T. de inspeccion", "Min. fin inspeccion", "T. Total de inspeccion", "T. en espera", "T. total de permanencia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaFinal);

        btnLimpiar.setText("Vaciar Todo");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnCrearTabla.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnCrearTabla.setText("CREAR TABLA");
        btnCrearTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearTablaActionPerformed(evt);
            }
        });

        btnGenerador.setText("Generar");
        btnGenerador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeneradorActionPerformed(evt);
            }
        });

        textDesvInspeccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDesvInspeccionActionPerformed(evt);
            }
        });

        tablaEstadisticos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"PROMEDIO", null},
                {"DESVIACION", null},
                {"MIN", null},
                {"MAX", null}
            },
            new String [] {
                "", "ESTADISTICOS"
            }
        ));
        jScrollPane4.setViewportView(tablaEstadisticos);

        jLabel19.setText("Media:");

        jLabel20.setText("Media:");

        jLabel21.setText("Desviacion:");

        jLabel11.setText("Cantidad de piezas:");

        javax.swing.GroupLayout PanelEjercicio1Layout = new javax.swing.GroupLayout(PanelEjercicio1);
        PanelEjercicio1.setLayout(PanelEjercicio1Layout);
        PanelEjercicio1Layout.setHorizontalGroup(
            PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel10))
                            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(btnEjemplo))
                            .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelEjercicio1Layout.createSequentialGroup()
                                    .addGap(28, 28, 28)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(textCantPiezas, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelEjercicio1Layout.createSequentialGroup()
                                    .addGap(33, 33, 33)
                                    .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                            .addGap(58, 58, 58)
                                            .addComponent(btnLimpiar))
                                        .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                            .addGap(19, 19, 19)
                                            .addComponent(btnCrearTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelEjercicio1Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel20)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(textMediaPieza, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelEjercicio1Layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel21)
                                                            .addComponent(jLabel19))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(textDesvInspeccion, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(textMediaInspeccion, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addComponent(btnGenerador, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelEjercicio1Layout.createSequentialGroup()
                                                        .addGap(15, 15, 15)
                                                        .addComponent(jLabel9)))))))))
                        .addGap(18, 18, Short.MAX_VALUE)))
                .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1520, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(324, Short.MAX_VALUE))
        );
        PanelEjercicio1Layout.setVerticalGroup(
            PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                        .addComponent(btnEjemplo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(15, 15, 15)
                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textCantPiezas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textMediaPieza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addGap(12, 12, 12)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textMediaInspeccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textDesvInspeccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addGap(18, 18, 18)
                        .addComponent(btnGenerador, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCrearTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1127, 1127, 1127))))
        );

        jScrollPane1.setViewportView(PanelEjercicio1);
        PanelEjercicio1.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 884, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textDesvInspeccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDesvInspeccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textDesvInspeccionActionPerformed

    private void btnGeneradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeneradorActionPerformed
        try {
            Random rand = new Random();

            // Generar valores aleatorios en los rangos indicados
            int numPiezas = (rand.nextInt(6) * 50) + 50;
            double mediaPieza = rand.nextInt(9) + 2; 
            double mediaInspeccion =  rand.nextInt(9) + 2; 
            double desviacionInspeccion =  rand.nextDouble();
            
            desviacionInspeccion = Math.round(desviacionInspeccion * 1000.0) / 1000.0;
            // Asignar valores a los textFields
            textCantPiezas.setText(String.valueOf(numPiezas));
            textMediaPieza.setText(String.valueOf(mediaPieza));
            textMediaInspeccion.setText(String.valueOf(mediaInspeccion));
            textDesvInspeccion.setText(String.valueOf(desviacionInspeccion)); // Siempre 0

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGeneradorActionPerformed

    private void btnCrearTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearTablaActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) tablaFinal.getModel();
        modelo.setRowCount(0); // Limpiar la tabla antes de agregar nuevos datos

        try {
            // Obtener valores desde los JTextField
            int numPiezas = Integer.parseInt(textCantPiezas.getText());
            double mediaLlegadas = Double.parseDouble(textMediaPieza.getText());
            double mediaInspeccion = Double.parseDouble(textMediaInspeccion.getText());
            double desviacionInspeccion = Double.parseDouble(textDesvInspeccion.getText());

            double minutoLlegada = 0;
            double minutoInicioInspeccion = 0;

            NormalDistribution normalDist = new NormalDistribution(mediaInspeccion, desviacionInspeccion);
            Random random = new Random();

            for (int i = 0; i < numPiezas; i++) {
                // Generar número aleatorio para la llegada y calcular el tiempo entre llegadas
                double rnLlegada = Math.random();
                double tiempoEntreLlegadas = -Math.log(1 - rnLlegada) * mediaLlegadas;
                minutoLlegada += tiempoEntreLlegadas;

                // Minuto en que inicia inspección (el máximo entre la llegada y la finalización anterior)
                minutoInicioInspeccion = Math.max(minutoLlegada, minutoInicioInspeccion);

                // Generar número aleatorio para el tiempo de inspección usando la distribución normal inversa
                double rnInspeccion = random.nextDouble(); // Número aleatorio entre 0 y 1
                double tiempoInspeccion = normalDist.inverseCumulativeProbability(rnInspeccion);
                tiempoInspeccion = Math.max(0, tiempoInspeccion); // Evitar valores negativos

                double minutoFinalizaInspeccion = minutoInicioInspeccion + tiempoInspeccion;

                // Cálculo del tiempo total en inspección
                double tiempoTotalInspeccion = tiempoInspeccion;

                // Cálculo del tiempo en espera
                double tiempoEspera = minutoInicioInspeccion - minutoLlegada;

                // Cálculo del tiempo total de permanencia
                double tiempoTotalPermanencia = tiempoEspera + tiempoTotalInspeccion;

                // Agregar fila a la tabla
                modelo.addRow(new Object[]{
                    (i + 1), // Número de pieza
                    String.format("%.4f", rnLlegada), 
                    String.format("%.4f", tiempoEntreLlegadas), 
                    String.format("%.4f", minutoLlegada), 
                    String.format("%.4f", minutoInicioInspeccion), 
                    String.format("%.4f", rnInspeccion), 
                    String.format("%.4f", tiempoInspeccion), 
                    String.format("%.4f", minutoFinalizaInspeccion), 
                    String.format("%.4f", tiempoTotalInspeccion), 
                    String.format("%.4f", tiempoEspera), 
                    String.format("%.4f", tiempoTotalPermanencia)
                });

                // Actualizar el minuto de inicio de inspección para la siguiente iteración
                minutoInicioInspeccion = minutoFinalizaInspeccion;
            }
            
            calcularEstadisticos();
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese valores numéricos válidos.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCrearTablaActionPerformed

    private void calcularEstadisticos() {
        DefaultTableModel modeloFinal = (DefaultTableModel) tablaFinal.getModel();
        DefaultTableModel modeloEstadisticos = (DefaultTableModel) tablaEstadisticos.getModel();

        ArrayList<Double> valores = new ArrayList<>();

        // Extraer los valores de la última columna (Tiempo total de permanencia)
        int rowCount = modeloFinal.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            String valorStr = modeloFinal.getValueAt(i, 10).toString(); // Última columna (10)
            valores.add(Double.parseDouble(valorStr));
        }

        // Calcular promedio
        double suma = 0;
        for (double v : valores) suma += v;
        double promedio = suma / valores.size();

        // Calcular varianza muestral
        double sumatoriaVarianza = 0;
        for (double v : valores) sumatoriaVarianza += Math.pow(v - promedio, 2);

        // Se divide por (N - 1) en lugar de N para obtener varianza muestral
        double varianzaMuestral = sumatoriaVarianza / (valores.size() - 1);

        // Desviación estándar muestral es la raíz cuadrada de la varianza muestral
        double desviacionMuestral = Math.sqrt(varianzaMuestral);

        // Obtener mínimo y máximo
        double min = valores.stream().min(Double::compareTo).orElse(0.0);
        double max = valores.stream().max(Double::compareTo).orElse(0.0);

        // Llenar la tabla estadística
        modeloEstadisticos.setRowCount(0); // Limpiar la tabla
        modeloEstadisticos.addRow(new Object[]{"Promedio", String.format("%.4f", promedio)});
        modeloEstadisticos.addRow(new Object[]{"Desviación", String.format("%.4f", desviacionMuestral)});
        modeloEstadisticos.addRow(new Object[]{"Mínimo", String.format("%.4f", min)});
        modeloEstadisticos.addRow(new Object[]{"Máximo", String.format("%.4f", max)});
    }

    
    // Método para calcular el promedio
    private double calcularPromedio(double[] datos) {
        double suma = 0;
        for (double valor : datos) {
            suma += valor;
        }
        return suma / datos.length;
    }
    

    // Método para calcular la desviación estándar muestral
    private double calcularDesviacionEstandarMuestral(double[] datos) {
        int n = datos.length;
        if (n < 2) return 0; // No se puede calcular con menos de 2 datos

        double suma = 0;
        double sumaCuadrados = 0;
        double res = 0;

        for (double valor : datos) {
            suma += valor;
        }

        double media = suma / n;

        for (double valor : datos) {
            sumaCuadrados += Math.pow(valor - media, 2);
        }
        
        res = Math.sqrt(sumaCuadrados / (n - 1));

        return res; // Se divide por (n - 1) para la muestra
    }

    // Método para calcular la desviación estándar poblacional (para futuras implementaciones)
    private double calcularDesviacionEstandarPoblacional(double[] datos) {
        int n = datos.length;
        if (n == 0) return 0;

        double suma = 0;
        double sumaCuadrados = 0;

        for (double valor : datos) {
            suma += valor;
        }

        double media = suma / n;

        for (double valor : datos) {
            sumaCuadrados += Math.pow(valor - media, 2);
        }

        return Math.sqrt(sumaCuadrados / n); // Se divide por "n" en lugar de "n-1"
    }
    
    
    
    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        DefaultTableModel model1 = (DefaultTableModel) tablaFinal.getModel();
        DefaultTableModel modelEstadisticos1 = (DefaultTableModel) tablaEstadisticos.getModel();
            
        model1.setRowCount(0);
        modelEstadisticos1.setRowCount(0);

        
        textMediaPieza.setText(String.valueOf(""));
        textMediaInspeccion.setText(String.valueOf(""));
        textDesvInspeccion.setText(String.valueOf(""));
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnEjemploActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEjemploActionPerformed
        textCantPiezas.setText(String.valueOf(200));
        textMediaPieza.setText(String.valueOf(5.0));
        textMediaInspeccion.setText(String.valueOf(4.0));
        textDesvInspeccion.setText(String.valueOf(0.5));

    }//GEN-LAST:event_btnEjemploActionPerformed

    private void textMediaPiezaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textMediaPiezaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textMediaPiezaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelEjercicio1;
    private javax.swing.JButton btnCrearTabla;
    private javax.swing.JButton btnEjemplo;
    private javax.swing.JButton btnGenerador;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tablaEstadisticos;
    private javax.swing.JTable tablaFinal;
    private javax.swing.JTextField textCantPiezas;
    private javax.swing.JTextField textDesvInspeccion;
    private javax.swing.JTextField textMediaInspeccion;
    private javax.swing.JTextField textMediaPieza;
    // End of variables declaration//GEN-END:variables
}
