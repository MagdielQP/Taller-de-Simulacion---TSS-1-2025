
package actividad5.tss.codigo.GUI;

import java.util.HashMap;
import java.util.Map;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.math3.distribution.NormalDistribution;
import org.apache.commons.math3.distribution.TDistribution;

public class VentanaEjercicio2 extends javax.swing.JPanel {

    public VentanaEjercicio2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        PanelEjercicio1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        textCostoFaltante = new javax.swing.JTextField();
        textCostoInventario = new javax.swing.JTextField();
        btnEjemplo = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaFinal1 = new javax.swing.JTable();
        btnLimpiar = new javax.swing.JButton();
        btnCrearTabla = new javax.swing.JButton();
        btnGenerador = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        areaConclusion1 = new javax.swing.JTextArea();
        textPolitica1 = new javax.swing.JTextField();
        textPolitica3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textPolitica2 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaEstadisticos1 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaFinal2 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tablaEstadisticos2 = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tablaFinal3 = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        tablaEstadisticos3 = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        tablaSimulacion1 = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        tablaSimulacion2 = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        tablaSimulacion3 = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        areaConclusion3 = new javax.swing.JTextArea();
        jScrollPane12 = new javax.swing.JScrollPane();
        areaConclusion2 = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(890, 560));

        PanelEjercicio1.setBackground(new java.awt.Color(102, 102, 102));
        PanelEjercicio1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        PanelEjercicio1.setPreferredSize(new java.awt.Dimension(2100, 1650));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("EJERCICIO 2 - PRODUCCION DE REFRIGERADORES");

        jLabel10.setText("-------------------------------------------------");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("DATOS");

        jLabel8.setText("Costo faltante por refrigerador:");

        jLabel9.setText("Costo refrigerador en inventario:");

        textCostoFaltante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCostoFaltanteActionPerformed(evt);
            }
        });

        btnEjemplo.setText("Ejercicio de Ejemplo");
        btnEjemplo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjemploActionPerformed(evt);
            }
        });

        jLabel7.setText("TABLA POLITICA 1");

        tablaFinal1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nro", "C.PROMEDIO", "REPLICA 1", "REPLICA 2", "REPLICA 3", "REPLICA 4", "REPLICA 5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaFinal1);

        btnLimpiar.setText("Vaciar Todo");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnCrearTabla.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnCrearTabla.setText("CREAR TABLA");
        btnCrearTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearTablaActionPerformed(evt);
            }
        });

        btnGenerador.setText("Generar");
        btnGenerador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeneradorActionPerformed(evt);
            }
        });

        jLabel13.setText("Conclusion: ");

        areaConclusion1.setColumns(20);
        areaConclusion1.setRows(5);
        jScrollPane3.setViewportView(areaConclusion1);

        textPolitica1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPolitica1ActionPerformed(evt);
            }
        });

        textPolitica3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPolitica3ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("POLITICAS DE PRODUCCION");

        textPolitica2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPolitica2ActionPerformed(evt);
            }
        });

        tablaEstadisticos1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"PROMEDIO", null, null, null, null, null, null},
                {"DESVIACION", null, null, null, null, null, ""},
                {"MIN", null, null, null, null, null, null},
                {"MAX", null, null, null, null, null, null}
            },
            new String [] {
                "", "C.PROMEDIO", "REPLICA 1", "REPLICA 2", "REPLICA 3", "REPLICA 4", "REPLICA 5"
            }
        ));
        jScrollPane4.setViewportView(tablaEstadisticos1);

        jLabel11.setText("TABLA POLITICA 2");

        tablaFinal2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nro", "C.PROMEDIO", "REPLICA 1", "REPLICA 2", "REPLICA 3", "REPLICA 4", "REPLICA 5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tablaFinal2);

        tablaEstadisticos2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"PROMEDIO", null, null, null, null, null, null},
                {"DESVIACION", null, null, null, null, null, ""},
                {"MIN", null, null, null, null, null, null},
                {"MAX", null, null, null, null, null, null}
            },
            new String [] {
                "", "C.PROMEDIO", "REPLICA 1", "REPLICA 2", "REPLICA 3", "REPLICA 4", "REPLICA 5"
            }
        ));
        jScrollPane6.setViewportView(tablaEstadisticos2);

        jLabel12.setText("TABLA DE POLITICA 3");

        tablaFinal3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nro", "C.PROMEDIO", "REPLICA 1", "REPLICA 2", "REPLICA 3", "REPLICA 4", "REPLICA 5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tablaFinal3);

        tablaEstadisticos3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"PROMEDIO", null, null, null, null, null, null},
                {"DESVIACION", null, null, null, null, null, ""},
                {"MIN", null, null, null, null, null, null},
                {"MAX", null, null, null, null, null, null}
            },
            new String [] {
                "", "C.PROMEDIO", "REPLICA 1", "REPLICA 2", "REPLICA 3", "REPLICA 4", "REPLICA 5"
            }
        ));
        jScrollPane8.setViewportView(tablaEstadisticos3);

        tablaSimulacion1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DIA", "INV.INI", "P.PROD", "T.DISP", "RN", "DEM", "VENTAS", "V.PERD", "INV.FIN", "C.FALT", "C.INV", "C.TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(tablaSimulacion1);
        if (tablaSimulacion1.getColumnModel().getColumnCount() > 0) {
            tablaSimulacion1.getColumnModel().getColumn(11).setResizable(false);
        }

        jLabel14.setText("SIMULACION POLITICA 1");

        jLabel15.setText("SIMULACION POLITICA 2");

        tablaSimulacion2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DIA", "INV.INI", "P.PROD", "T.DISP", "RN", "DEM", "VENTAS", "V.PERD", "INV.FIN", "C.FALT", "C.INV", "C.TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane11.setViewportView(tablaSimulacion2);
        if (tablaSimulacion2.getColumnModel().getColumnCount() > 0) {
            tablaSimulacion2.getColumnModel().getColumn(11).setResizable(false);
        }

        jLabel16.setText("SIMULACION POLITICA 3");

        tablaSimulacion3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DIA", "INV.INI", "P.PROD", "T.DISP", "RN", "DEM", "VENTAS", "V.PERD", "INV.FIN", "C.FALT", "C.INV", "C.TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane13.setViewportView(tablaSimulacion3);
        if (tablaSimulacion3.getColumnModel().getColumnCount() > 0) {
            tablaSimulacion3.getColumnModel().getColumn(11).setResizable(false);
        }

        areaConclusion3.setColumns(20);
        areaConclusion3.setRows(5);
        jScrollPane10.setViewportView(areaConclusion3);

        areaConclusion2.setColumns(20);
        areaConclusion2.setRows(5);
        jScrollPane12.setViewportView(areaConclusion2);

        jLabel17.setText("Conclusion:");

        jLabel18.setText("Conclusion:");

        javax.swing.GroupLayout PanelEjercicio1Layout = new javax.swing.GroupLayout(PanelEjercicio1);
        PanelEjercicio1.setLayout(PanelEjercicio1Layout);
        PanelEjercicio1Layout.setHorizontalGroup(
            PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(btnEjemplo))
                            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textCostoInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(textCostoFaltante, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel10))
                            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textPolitica2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textPolitica1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textPolitica3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(btnGenerador, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(btnCrearTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addComponent(btnLimpiar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)))
                .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                        .addGap(199, 1199, Short.MAX_VALUE)
                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 1128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 1128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 1128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel11))
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel12))
                                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(225, 225, 225)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(200, 200, 200)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelEjercicio1Layout.setVerticalGroup(
            PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                .addComponent(btnEjemplo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addGap(10, 10, 10)
                                .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textCostoFaltante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(textCostoInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(textPolitica1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textPolitica2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textPolitica3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnGenerador, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13))
                            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)))
                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(btnCrearTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelEjercicio1Layout.createSequentialGroup()
                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel17))
                        .addGap(18, 18, 18)
                        .addGroup(PanelEjercicio1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel18))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(PanelEjercicio1);
        PanelEjercicio1.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 2644, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1600, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textPolitica2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPolitica2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPolitica2ActionPerformed

    private void textPolitica3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPolitica3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPolitica3ActionPerformed

    private void textPolitica1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPolitica1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPolitica1ActionPerformed

    private void btnGeneradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeneradorActionPerformed
        try {
            Random rand = new Random();

            // Generar valores aleatorios en los rangos indicados
            int costoFaltantes = (rand.nextInt(6) * 100) + 500; // Entre 500 y 1000
            int costoInventario = (rand.nextInt(6) * 100) + 500; 
            int politica1 =  (rand.nextInt(8) * 10) + 30; // Entre 30 y 100
            int politica2 =  (rand.nextInt(8) * 10) + 30;
            int politica3 =  (rand.nextInt(8) * 10) + 30;
            
            // Asignar valores a los textFields
            textCostoFaltante.setText(String.valueOf(costoFaltantes));
            textCostoInventario.setText(String.valueOf(costoInventario));
            textPolitica1.setText(String.valueOf(politica1)); // Siempre 0
            textPolitica2.setText(String.valueOf(politica2));
            textPolitica3.setText(String.valueOf(politica3));

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGeneradorActionPerformed

    private void btnCrearTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearTablaActionPerformed
        try {
            int costoFaltantes = Integer.parseInt(textCostoFaltante.getText());
            int costoInventario = Integer.parseInt(textCostoInventario.getText()); // Permite decimales
            int politica1 = Integer.parseInt(textPolitica1.getText());
            int politica2 = Integer.parseInt(textPolitica2.getText());
            int politica3 = Integer.parseInt(textPolitica3.getText());
            
            DefaultTableModel model1 = (DefaultTableModel) tablaFinal1.getModel();
            DefaultTableModel modelEstadisticos1 = (DefaultTableModel) tablaEstadisticos1.getModel();
            DefaultTableModel modelSimu1 = (DefaultTableModel) tablaSimulacion1.getModel();
            
            model1.setRowCount(0);
            modelEstadisticos1.setRowCount(0);
            modelSimu1.setRowCount(0);

            DefaultTableModel model2 = (DefaultTableModel) tablaFinal2.getModel();
            DefaultTableModel modelEstadisticos2 = (DefaultTableModel) tablaEstadisticos2.getModel();
            DefaultTableModel modelSimu2 = (DefaultTableModel) tablaSimulacion2.getModel();
            
            model2.setRowCount(0);
            modelEstadisticos2.setRowCount(0);
            modelSimu2.setRowCount(0);
            
            DefaultTableModel model3 = (DefaultTableModel) tablaFinal3.getModel();
            DefaultTableModel modelEstadisticos3 = (DefaultTableModel) tablaEstadisticos3.getModel();
            DefaultTableModel modelSimu3 = (DefaultTableModel) tablaSimulacion3.getModel();
            
            model3.setRowCount(0);
            modelEstadisticos3.setRowCount(0);
            modelSimu3.setRowCount(0);
            
            llenarTabla(politica1, costoFaltantes, costoInventario, modelSimu1);
            llenarTabla(politica2, costoFaltantes, costoInventario, modelSimu2);
            llenarTabla(politica3, costoFaltantes, costoInventario, modelSimu3);
            
            llenarTablaFinal(politica1, costoFaltantes, costoInventario, modelSimu1, model1);
            llenarTablaFinal(politica2, costoFaltantes, costoInventario, modelSimu2, model2);
            llenarTablaFinal(politica3, costoFaltantes, costoInventario, modelSimu3, model3);
            
            llenarTablaEstadisticos(model1, modelEstadisticos1);
            llenarTablaEstadisticos(model2, modelEstadisticos2);
            llenarTablaEstadisticos(model3, modelEstadisticos3);
            
            mostrarConclusion(modelEstadisticos1, politica1, areaConclusion1);
            mostrarConclusion(modelEstadisticos2, politica2, areaConclusion2);
            mostrarConclusion(modelEstadisticos3, politica3, areaConclusion3);
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese valores numéricos válidos.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCrearTablaActionPerformed

    private void mostrarConclusion(DefaultTableModel modelEstadisticos, int politica, JTextArea area) {

        // Obtener los promedios de la primera fila (segunda columna en adelante)
        double[] replicas = new double[5];
        for (int i = 0; i < 5; i++) {
            replicas[i] = Double.parseDouble(modelEstadisticos.getValueAt(0, i + 2).toString());
        }

        // Calcular el promedio total de las réplicas
        double promedio = calcularPromedio(replicas);

        // Calcular la desviación estándar muestral
        double desviacion = calcularDesviacionEstandarMuestral(replicas);

        // Calcular el intervalo de confianza
        double tValue = new TDistribution(4).inverseCumulativeProbability(1 - 0.05 / 2); // t(0.05, 4)
        double margenError = (desviacion / Math.sqrt(5)) * tValue;
        double intervaloInferior = promedio - margenError;
        double intervaloSuperior = promedio + margenError;

        // Formatear el texto para el JTextArea
        String conclusion = String.format(
            "Política = %d\n\n" +
            "Con promedios:\n" +
            "Replica1 = %.2f\n" +
            "Replica2 = %.2f\n" +
            "Replica3 = %.2f\n" +
            "Replica4 = %.2f\n" +
            "Replica5 = %.2f\n\n" +
            "El promedio de estos es: %.2f\n" +
            "Su desviación es: %.2f\n\n" +
            "Intervalos de confianza:\n" +
            "Inferior: %.2f\n" +
            "Superior: %.2f",
            politica, replicas[0], replicas[1], replicas[2], replicas[3], replicas[4],
            promedio, desviacion, intervaloInferior, intervaloSuperior
        );

        // Mostrar en el JTextArea
        area.setText(conclusion);
    }

    // Método para calcular el promedio
    private double calcularPromedio(double[] datos) {
        double suma = 0;
        for (double valor : datos) {
            suma += valor;
        }
        return suma / datos.length;
    }
    
    // Método para llenar la tabla de estadísticas
    private void llenarTablaEstadisticos(DefaultTableModel model, DefaultTableModel modelEstadisticos) {
        // Limpiamos la tabla de estadísticas antes de llenarla
        modelEstadisticos.setRowCount(0);

        int filas = model.getRowCount();
        int columnas = model.getColumnCount() - 1; // Excluimos la columna "Número"

        double[][] datos = new double[columnas][filas];

        // Extraer los datos de model1 y almacenarlos en un array
        for (int col = 1; col <= columnas; col++) { // Inicia en 1 para evitar la columna de números
            for (int fila = 0; fila < filas; fila++) {
                datos[col - 1][fila] = Double.parseDouble(model.getValueAt(fila, col).toString());
            }
        }

        // Arrays para almacenar estadísticas
        double[] promedios = new double[columnas];
        double[] desviacionesMuestrales = new double[columnas];
        double[] desviacionesPoblacionales = new double[columnas]; // Para futuras implementaciones
        double[] minimos = new double[columnas];
        double[] maximos = new double[columnas];

        // Cálculo de estadísticas
        for (int col = 0; col < columnas; col++) {
            double suma = 0;
            minimos[col] = Double.MAX_VALUE;
            maximos[col] = Double.MIN_VALUE;

            for (int fila = 0; fila < filas; fila++) {
                double valor = datos[col][fila];
                suma += valor;
                if (valor < minimos[col]) minimos[col] = valor;
                if (valor > maximos[col]) maximos[col] = valor;
            }

            promedios[col] = suma / filas;
            desviacionesMuestrales[col] = calcularDesviacionEstandarMuestral(datos[col]);
            desviacionesPoblacionales[col] = calcularDesviacionEstandarPoblacional(datos[col]); // No se usa ahora, pero queda listo
        }

        // Agregar las filas de estadísticas a modelEstadisticos1
        modelEstadisticos.addRow(new Object[]{"Promedio", promedios[0], promedios[1], promedios[2], promedios[3], promedios[4], promedios[5]});
        modelEstadisticos.addRow(new Object[]{"Desv.Estándar", desviacionesMuestrales[0], desviacionesMuestrales[1], desviacionesMuestrales[2], desviacionesMuestrales[3], desviacionesMuestrales[4], desviacionesMuestrales[5]});
        modelEstadisticos.addRow(new Object[]{"Mínimo", minimos[0], minimos[1], minimos[2], minimos[3], minimos[4], minimos[5]});
        modelEstadisticos.addRow(new Object[]{"Máximo", maximos[0], maximos[1], maximos[2], maximos[3], maximos[4], maximos[5]});
    }

    // Método para calcular la desviación estándar muestral
    private double calcularDesviacionEstandarMuestral(double[] datos) {
        int n = datos.length;
        if (n < 2) return 0; // No se puede calcular con menos de 2 datos

        double suma = 0;
        double sumaCuadrados = 0;
        double res = 0;

        for (double valor : datos) {
            suma += valor;
        }

        double media = suma / n;

        for (double valor : datos) {
            sumaCuadrados += Math.pow(valor - media, 2);
        }
        
        res = Math.sqrt(sumaCuadrados / (n - 1));

        return res; // Se divide por (n - 1) para la muestra
    }

    // Método para calcular la desviación estándar poblacional (para futuras implementaciones)
    private double calcularDesviacionEstandarPoblacional(double[] datos) {
        int n = datos.length;
        if (n == 0) return 0;

        double suma = 0;
        double sumaCuadrados = 0;

        for (double valor : datos) {
            suma += valor;
        }

        double media = suma / n;

        for (double valor : datos) {
            sumaCuadrados += Math.pow(valor - media, 2);
        }

        return Math.sqrt(sumaCuadrados / n); // Se divide por "n" en lugar de "n-1"
    }
    
    // Nuevo método para ejecutar las simulaciones y llenar model1
    private void llenarTablaFinal(int politica, int costoF, int costoI, DefaultTableModel modelSimu, DefaultTableModel model) {
    // Limpiar model1 antes de llenarlo
    model.setRowCount(0);

    // Matriz para almacenar los promedios acumulativos de las réplicas
    double[][] replicas = new double[100][5];

    // Llenar la tabla con 5 simulaciones
    for (int replica = 0; replica < 5; replica++) {
        modelSimu.setRowCount(0); // Limpiar la tabla de simulación
        llenarTabla(politica, costoF, costoI, modelSimu);

        // Calcular promedios acumulativos
        double suma = 0;
        for (int fila = 0; fila < 100; fila++) {
            int valor = (int) modelSimu.getValueAt(fila, 11);
            suma += valor;
            replicas[fila][replica] = suma / (fila + 1); // Promedio acumulativo
        }
    }

    // Llenar model1 con los promedios acumulativos de las réplicas
    for (int i = 0; i < 100; i++) { //llenar con 350 datos
        double sumaPromedio = 0;
        for (int j = 0; j < 5; j++) {
            sumaPromedio += replicas[i][j];
        }
        double costoPromedio = sumaPromedio / 5; // Promedio de las réplicas

        // Agregar fila a model1
        model.addRow(new Object[]{i + 1, costoPromedio, replicas[i][0], replicas[i][1], replicas[i][2], replicas[i][3], replicas[i][4]});
    }
}
    
    private void llenarTabla(int politica, int costoF, int costoI, DefaultTableModel model) {
        Random rand = new Random();
        model.setRowCount(0); // Limpiar la tabla antes de llenarla

        int inventarioInicial = 0;

        for (int dia = 1; dia <= 100; dia++) {
            int totalDisponible = inventarioInicial + politica;
            double randomNumber = Math.round(rand.nextDouble() * 10000.0) / 10000.0;

            // Crear la distribución normal estándar
            NormalDistribution normal = new NormalDistribution(0, 1);
            // Obtener el valor Z de la distribución normal inversa
            double z = normal.inverseCumulativeProbability(randomNumber);
            // Calcular la demanda con la fórmula X = μ + σ * Z
            int demanda = (int) Math.round(80 + 10 * z);

            int ventas = Math.min(totalDisponible, demanda);
            int ventasPerdidas = demanda - ventas;
            int inventarioFinal = totalDisponible - ventas;
            int costoFaltante = ventasPerdidas * costoF;
            int costoInventario = inventarioFinal * costoI;
            int costoTotal = costoFaltante + costoInventario;

            // Agregar fila a la tabla
            model.addRow(new Object[]{dia, politica, inventarioInicial, totalDisponible, randomNumber, demanda, ventas, ventasPerdidas, inventarioFinal, costoFaltante, costoInventario, costoTotal});

            // Actualizar inventario para el siguiente día
            inventarioInicial = inventarioFinal;
        }
    }
    
    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        DefaultTableModel model1 = (DefaultTableModel) tablaFinal1.getModel();
        DefaultTableModel modelEstadisticos1 = (DefaultTableModel) tablaEstadisticos1.getModel();
        DefaultTableModel modelSimu1 = (DefaultTableModel) tablaSimulacion1.getModel();
            
        model1.setRowCount(0);
        modelEstadisticos1.setRowCount(0);
        modelSimu1.setRowCount(0);

        DefaultTableModel model2 = (DefaultTableModel) tablaFinal2.getModel();
        DefaultTableModel modelEstadisticos2 = (DefaultTableModel) tablaEstadisticos2.getModel();
        DefaultTableModel modelSimu2 = (DefaultTableModel) tablaSimulacion2.getModel();
            
        model2.setRowCount(0);
        modelEstadisticos2.setRowCount(0);
        modelSimu2.setRowCount(0);
            
        DefaultTableModel model3 = (DefaultTableModel) tablaFinal3.getModel();
        DefaultTableModel modelEstadisticos3 = (DefaultTableModel) tablaEstadisticos3.getModel();
        DefaultTableModel modelSimu3 = (DefaultTableModel) tablaSimulacion3.getModel();
            
        model3.setRowCount(0);
        modelEstadisticos3.setRowCount(0);
        modelSimu3.setRowCount(0);
        
        
        textCostoFaltante.setText(String.valueOf(""));
        textCostoInventario.setText(String.valueOf(""));
        textPolitica1.setText(String.valueOf(""));
        textPolitica2.setText(String.valueOf(""));
        textPolitica3.setText(String.valueOf(""));
        
        areaConclusion1.setText("");
        areaConclusion2.setText("");
        areaConclusion3.setText("");
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnEjemploActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEjemploActionPerformed
        textCostoFaltante.setText(String.valueOf(800));
        textCostoInventario.setText(String.valueOf(500));
        textPolitica1.setText(String.valueOf(60));
        textPolitica2.setText(String.valueOf(70));
        textPolitica3.setText(String.valueOf(80));

    }//GEN-LAST:event_btnEjemploActionPerformed

    private void textCostoFaltanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textCostoFaltanteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textCostoFaltanteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelEjercicio1;
    private javax.swing.JTextArea areaConclusion1;
    private javax.swing.JTextArea areaConclusion2;
    private javax.swing.JTextArea areaConclusion3;
    private javax.swing.JButton btnCrearTabla;
    private javax.swing.JButton btnEjemplo;
    private javax.swing.JButton btnGenerador;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable tablaEstadisticos1;
    private javax.swing.JTable tablaEstadisticos2;
    private javax.swing.JTable tablaEstadisticos3;
    private javax.swing.JTable tablaFinal1;
    private javax.swing.JTable tablaFinal2;
    private javax.swing.JTable tablaFinal3;
    private javax.swing.JTable tablaSimulacion1;
    private javax.swing.JTable tablaSimulacion2;
    private javax.swing.JTable tablaSimulacion3;
    private javax.swing.JTextField textCostoFaltante;
    private javax.swing.JTextField textCostoInventario;
    private javax.swing.JTextField textPolitica1;
    private javax.swing.JTextField textPolitica2;
    private javax.swing.JTextField textPolitica3;
    // End of variables declaration//GEN-END:variables
}
